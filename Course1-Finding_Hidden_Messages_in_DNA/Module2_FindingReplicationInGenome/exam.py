import module2

# module2.skew('GAGCCACCGCGATA', len('GAGCCACCGCGATA')-1)

#print(module2.approximate_pattern_matching('AAAAA', 'AACAAGCTGATAAACATTTAAAGAG', 1))

#print(module2.approximate_pattern_matching_count('AAAAA', 'AACAAGCTGATAAACATTTAAAGAG', 2))

#print(module2.approximate_pattern_matching_count('TATGAG', 'GCATTTATGAGCTAAAATATATTTGTTCTGACTGGGCACGGCGCACGGACCTGCAGAGCGGGGCGTTGACAGGTCCTGTCTTCCGAGCCCGAGGGCTGAGAGGCTCTCTGCATCGAGACATAAGCGCTGAGCGCGAAAGACCTAGGCACCCTGCGTGCCGCGTGCTGAACAAACAGGGAAATTGGAGAACGCCACAATGAGCACAGTGTCATCTTTAACAGTCTCGCTCATCTCTCAATAGAGCGAATATGGGTCTGTCCTCTCAGAGACTGACCCCACACTGTAACCCAAGCTTTGTAGAATAAGACACTTTCTACCTCGCAACTCAAGCTATACCGCTCTAGATCT', 2))

# print(module2.list_pattern_neighbors('CCCAACCGGTTG', 2))

# print(module2.find_kmers_with_mismatches('GATGATTGGTGATTGGTGATTGGTCGTTTGGATTGGTACGTGATACGTGATACGTCGTTTGTTGACGTACGTTTGCGTCGTCGTGATCGTTGGTTGGTGATTGGTGATTGGTCGTGATTTGACGTCGTACGTGATACGTCGTTGGTCGTCGTACGTACGTTGGTGATCGTACGTGATGATCGTGATACGTCGTCGTTTGGATTGGTACGTACGTGATACGTTGGTACGTACGTGATTGGTGATACGTGATGATTGGTCGTACGTTGGTACGTCGTTTGTGGTACGTCGTGATCGTCGTCGTTTGTTGCGTACGTCGTTTGTTGCGTACGTTGGTTTGACGTTGGTACGTTGGTCGTACGTGATTTGTGGTGAT', 7, 3))

# print(module2.find_kmers_with_mismatches_and_reverse_complements('CCGCTTCTTCCGTAGGAATAGCTCCGCCGCTTCTTTAGTAGTAGCTCTCTTTAGCTTCCGGAACTTCCGTAGTAGCTCCGGAACCGCCGTAGCTCTTCTTCTTAGTAGCTCTTGAACTTTAGCTTCTCCGCTTAGCTCTCCGCTTGAACTCTTGAACCGCCGCCGCTTGAAGAATAGTAGCTTCTTCCGTAGCTCTT', 7, 3))

# with open("Course1-Finding_Hidden_Messages_in_DNA\\Module2-FindingReplicationInGenome\\thermotoga_petrofila.txt", "r") as f:
#    thermo = f.read()
# print(module2.find_kmers_with_mismatches_and_reverse_complements(thermo, 9, 3))

print("Question 2")
print(module2.hamming_distance('CTACAGCAATACGATCATATGCGGATCCGCAGTGGCCGGTAGACACACGT', 'CTACCCCGCTGCTCAATGACCGGGACTAAAGAGGCGAAGATTATGGTGTG'))

print("Question 3")
print(module2.minimum_skew("GATACACTTCCCGAGTAGGTACTG"))

print("Question 4")
print(module2.approximate_pattern_matching_count("CCC", "CATGCCATTCGCATTGTCCCAGTGA",2))

print("Question 5")
neighbors = module2.list_pattern_neighbors('TGCAT', 2)
print(neighbors)
print(len(neighbors))